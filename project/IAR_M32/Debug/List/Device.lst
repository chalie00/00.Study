###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     18/Oct/2022  17:43:44 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c      #
#    Command line =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c -D   #
#                    USE_STDPERIPH_DRIVER -D STM32F10x_HD -D USE_FULL_ASSERT  #
#                    -lcN C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_ #
#                    M32\Debug\List\ -lb C:\Users\TTT\Desktop\zz.STDFW\00.Stu #
#                    dy\project\IAR_M32\Debug\List\ -o                        #
#                    C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\I #
#                    AR_M32\..\..\inc\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\CMSIS\CM3\DeviceSupp #
#                    ort\ST\STM32F10x\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\STM32F10x_StdPeriph_ #
#                    Driver\inc\ -I "C:\Program Files (x86)\IAR               #
#                    Systems\Embedded Workbench 6.0\arm\inc\c\" -On -I        #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\List\Device.lst                                     #
#    Object file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\Device.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c
      1          
      2          #include "Device.h"
      3          #include "Common.h"
      4          
      5          /*******************************************************************************
      6          * TYPE DEFINE STRUCTURE
      7          *******************************************************************************/
      8          USART_InitTypeDef USART_InitStructure;
      9          NVIC_InitTypeDef NVIC_InitStructure;
     10          GPIO_InitTypeDef GPIO_InitStructure;
     11          TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
     12          TIM_OCInitTypeDef TIM_OCInitStructure;
     13          EXTI_InitTypeDef EXTI_InitStructure;
     14          DMA_InitTypeDef DMA_InitStructure;
     15          ADC_InitTypeDef ADC_InitStructure;
     16          RCC_ClocksTypeDef rcc_clocks;
     17          I2C_InitTypeDef	I2C_InitStructure;
     18          
     19          void I2C_Configuration(void);
     20          
     21          uint16_t PrescalerValue = 0;
     22          int counterFive = 0;
     23          int counterEight = 0;
     24          int counterNine = 0;
     25          
     26          
     27          /*******************************************************************************
     28          * Divece Initialization
     29          *******************************************************************************/
     30          void Initial_Device(void)
     31          {
     32             RCC_Configuration();
     33             RCC_GetClocksFreq(&rcc_clocks);
     34             GPIO_Configuration();
     35          
     36          
     37             //TIMER_Init();
     38             NVIC_Configuration();
     39             USART3_Init(115200);
     40             //EXTI_Configuration();
     41          
     42          }
     43          
     44          
     45          /*******************************************************************************
     46          * Function : TIMER_Init
     47          *******************************************************************************/
     48          void TIMER_Init(void)
     49          {
     50             uint16_t	period;
     51             period = (SystemCoreClock / 1200 ) - 1;
     52             //PrescalerValue = (uint16_t) (SystemCoreClock / 120000);
     53          
     54             //TIM4 (CH3): GPIOB 8 LED Green
     55             //TIM4 (CH4): GPIOB 9 LED Red
     56             
     57          
     58             TIM_TimeBaseStructure.TIM_Period = 7200 - 1; // 1sec
     59             TIM_TimeBaseStructure.TIM_Prescaler = 10000 - 1;
     60             TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
     61             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
     62             //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
     63             TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
     64          	TIM_ARRPreloadConfig(TIM4, ENABLE);
     65          	TIM_Cmd(TIM4, ENABLE);	
     66             	TIM_PrescalerConfig(TIM4, 10000, TIM_PSCReloadMode_Immediate);
     67          	TIM_ClearFlag(TIM4, TIM_FLAG_Update);
     68          	TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);
     69          	
     70          
     71          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Disable;
     72          //	   TIM_OC1Init(TIM4, &TIM_OCInitStructure);
     73          //	   TIM_OC2Init(TIM4, &TIM_OCInitStructure);
     74          
     75          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     76          //	   TIM_OCInitStructure.TIM_Pulse = 1;
     77          //	   TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
     78          //	   TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     79          //	   TIM_OC3Init(TIM4, &TIM_OCInitStructure);
     80          //	   TIM_Cmd(TIM4, ENABLE);
     81          
     82          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     83          //	   TIM_OCInitStructure.TIM_Pulse = 1;
     84          //	   TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
     85          //	   TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     86          //	   TIM_OC4Init(TIM4, &TIM_OCInitStructure);
     87          //	   TIM_Cmd(TIM4, ENABLE);
     88          
     89          
     90          }
     91          
     92          /*******************************************************************************
     93          * Function : RCC_Configuration
     94          *******************************************************************************/
     95          void RCC_Configuration(void)
     96          {
     97             SystemInit();
     98          
     99             /* GPIOx clock enable */
    100             RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD | RCC_APB2Periph_GPIOE| RCC_APB2Periph_AFIO, ENABLE);
    101          
    102             /* TIM clock enable */
    103             RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
    104             RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
    105          
    106             //RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
    107             
    108             
    109          }
    110          
    111          /*******************************************************************************
    112          * Function : NVIC_Configuration
    113          *******************************************************************************/
    114          void NVIC_Configuration(void)
    115          {
    116          
    117             NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
    118             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    119             NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    120             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    121             NVIC_Init(&NVIC_InitStructure);
    122          
    123          //	   NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;
    124          //	   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    125          //	   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    126          //	   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    127          //	   NVIC_Init(&NVIC_InitStructure);
    128          
    129          //USART Interrupt
    130          	NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;
    131          	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    132          	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    133          	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    134          	NVIC_Init(&NVIC_InitStructure);
    135          
    136          
    137          
    138          }
    139          
    140          /*******************************************************************************
    141          * Function : GPIO_Configuration
    142          *******************************************************************************/
    143          void GPIO_Configuration(void)
    144          {
    145          
    146             //GPIOA Pin 0: Set The WKUP SW Of Mango B'd
    147          //	   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    148          //	   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    149          //	   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    150          //	   GPIO_Init(GPIOA, &GPIO_InitStructure);
    151          
    152             //GPIOA Pin 1: Set The UserKey SW Of Mango B'd
    153          //	   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
    154          //	   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    155          //	   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    156          //	   GPIO_Init(GPIOA, &GPIO_InitStructure);
    157          
    158             //GPIOB Pin5: Yellow, Pin8: Green, Pin9: Red
    159             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_8 | GPIO_Pin_5;
    160             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    161             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    162             GPIO_Init(GPIOB, &GPIO_InitStructure);
    163          
    164             //PB10_I2C2_SCL_U3TX
    165             //PB11_I2C2_SDA_U3RX
    166          
    167          
    168             //GPIOA Input (PB11 RX)
    169          //	   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
    170          //	   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    171          //	   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    172          //	   GPIO_Init(GPIOA, &GPIO_InitStructure);
    173          //	
    174          //	
    175          //	   //GPIOA Output (PB10 TX)
    176          //	   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
    177          //	   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    178          //	   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    179          //	   GPIO_Init(GPIOA, &GPIO_InitStructure);
    180          
    181          	//GPIOC SevenSeg
    182             
    183             
    184             
    185          //		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 |
    186          //									  GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8;
    187          //		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    188          //		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    189          //	    GPIO_Init(GPIOC, &GPIO_InitStructure);
    190          
    191          	//GPIOE LED
    192          //		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4;
    193          //		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    194          //		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    195          //		GPIO_Init(GPIOE, &GPIO_InitStructure);
    196          
    197          
    198          }
    199          
    200          void EXTI_Configuration(void){
    201          	EXTI_InitStructure.EXTI_Line = EXTI_Line0;
    202          	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    203          	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    204          	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    205          	EXTI_Init(&EXTI_InitStructure);
    206          
    207          	EXTI_InitStructure.EXTI_Line = EXTI_Line1;
    208              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    209          	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    210          	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    211          	EXTI_Init(&EXTI_InitStructure);
    212          
    213          }
    214          
    215          void USART3_Init(u32 BRate) {
    216          	USART_InitStructure.USART_BaudRate = BRate;
    217          	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    218          	USART_InitStructure.USART_Parity = USART_Parity_No;
    219          	USART_InitStructure.USART_StopBits = USART_StopBits_1;
    220          	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    221          	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
    222          
    223          	USART_Init(USART3, &USART_InitStructure);
    224          
    225          	USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
    226          	USART_ITConfig(USART3, USART_IT_TC, ENABLE);
    227          
    228          	USART_Cmd(USART3, ENABLE);
    229          }
    230          
    231          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  EXTI_Configuration
             8 -> EXTI_Init
        8  GPIO_Configuration
             8 -> GPIO_Init
        8  Initial_Device
             8 -> GPIO_Configuration
             8 -> NVIC_Configuration
             8 -> RCC_Configuration
             8 -> RCC_GetClocksFreq
             8 -> USART3_Init
        8  NVIC_Configuration
             8 -> NVIC_Init
        8  RCC_Configuration
             8 -> RCC_APB1PeriphClockCmd
             8 -> RCC_APB2PeriphClockCmd
             8 -> SystemInit
        8  TIMER_Init
             8 -> TIM_ARRPreloadConfig
             8 -> TIM_ClearFlag
             8 -> TIM_Cmd
             8 -> TIM_ITConfig
             8 -> TIM_PrescalerConfig
             8 -> TIM_TimeBaseInit
        8  USART3_Init
             8 -> USART_Cmd
             8 -> USART_ITConfig
             8 -> USART_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      20  ADC_InitStructure
      44  DMA_InitStructure
      64  EXTI_Configuration
       8  EXTI_InitStructure
      32  GPIO_Configuration
       4  GPIO_InitStructure
      16  I2C_InitStructure
      30  Initial_Device
      64  NVIC_Configuration
       4  NVIC_InitStructure
       2  PrescalerValue
      34  RCC_Configuration
     102  TIMER_Init
      16  TIM_OCInitStructure
      12  TIM_TimeBaseStructure
      80  USART3_Init
      16  USART_InitStructure
       4  counterEight
       4  counterFive
       4  counterNine
      20  rcc_clocks

 
 174 bytes in section .bss
 446 bytes in section .text
 
 446 bytes of CODE memory
 174 bytes of DATA memory

Errors: none
Warnings: 1
