###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Jul/2022  18:06:58 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c      #
#    Command line =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c -D   #
#                    USE_STDPERIPH_DRIVER -D STM32F10x_HD -D USE_FULL_ASSERT  #
#                    -lcN C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_ #
#                    M32\Debug\List\ -lb C:\Users\TTT\Desktop\zz.STDFW\00.Stu #
#                    dy\project\IAR_M32\Debug\List\ -o                        #
#                    C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\I #
#                    AR_M32\..\..\inc\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\CMSIS\CM3\DeviceSupp #
#                    ort\ST\STM32F10x\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\STM32F10x_StdPeriph_ #
#                    Driver\inc\ -I "C:\Program Files (x86)\IAR               #
#                    Systems\Embedded Workbench 6.0\arm\inc\c\" -On -I        #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\List\Device.lst                                     #
#    Object file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\Device.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c
      1          
      2          #include "Device.h"
      3          #include "Common.h"
      4          
      5          /*******************************************************************************
      6          * TYPE DEFINE STRUCTURE
      7          *******************************************************************************/
      8          USART_InitTypeDef USART_InitStructure;
      9          NVIC_InitTypeDef NVIC_InitStructure;
     10          GPIO_InitTypeDef GPIO_InitStructure;
     11          TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
     12          TIM_OCInitTypeDef TIM_OCInitStructure;
     13          DMA_InitTypeDef DMA_InitStructure;
     14          ADC_InitTypeDef ADC_InitStructure;
     15          RCC_ClocksTypeDef rcc_clocks;
     16          I2C_InitTypeDef	I2C_InitStructure;
     17          
     18          void I2C_Configuration(void);
     19          
     20          uint16_t PrescalerValue = 0;
     21          
     22          
     23          /*******************************************************************************
     24          * Divece Initialization
     25          *******************************************************************************/
     26          void Initial_Device(void)
     27          {
     28             RCC_Configuration();
     29             RCC_GetClocksFreq(&rcc_clocks);
     30             GPIO_Configuration();
     31          
     32             TIMER_Init();
     33          
     34             NVIC_Configuration();
     35          }
     36          
     37          
     38          /*******************************************************************************
     39          * Function : TIMER_Init
     40          *******************************************************************************/
     41          void TIMER_Init(void)
     42          {
     43             uint16_t	period;
     44             period = (SystemCoreClock / 1200 ) - 1;
     45             PrescalerValue = (uint16_t) (SystemCoreClock / 120000);
     46          
     47          
     48          
     49          	//USER Key: TIM2 CH2
     50             TIM_TimeBaseStructure.TIM_Period = 3600 - 1;
     51             TIM_TimeBaseStructure.TIM_Prescaler = 60000 - 1;
     52             TIM_TimeBaseStructure.TIM_ClockDivision = 0;
     53             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
     54             //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
     55             TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
     56             
     57             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Disable;
     58             TIM_OC1Init(TIM4, &TIM_OCInitStructure);
     59             TIM_OC3Init(TIM4, &TIM_OCInitStructure);
     60             TIM_OC4Init(TIM4, &TIM_OCInitStructure);
     61          
     62             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     63             TIM_OCInitStructure.TIM_Pulse = 1;
     64             TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
     65             TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     66             TIM_OC2Init(TIM4, &TIM_OCInitStructure);
     67             TIM_Cmd(TIM2, ENABLE);
     68             
     69          
     70             //TIM4 (CH3): GPIOB 8 LED Green
     71             //TIM4 (CH4): GPIOB 9 LED Red
     72          
     73             TIM_TimeBaseStructure.TIM_Period = 3600 - 1;
     74             TIM_TimeBaseStructure.TIM_Prescaler = 60000 - 1;
     75             TIM_TimeBaseStructure.TIM_ClockDivision = 0;
     76             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
     77             //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
     78             TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
     79          
     80             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Disable;
     81             TIM_OC1Init(TIM4, &TIM_OCInitStructure);
     82             TIM_OC2Init(TIM4, &TIM_OCInitStructure);
     83          
     84             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     85             TIM_OCInitStructure.TIM_Pulse = 1;
     86             TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
     87             TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     88             TIM_OC3Init(TIM4, &TIM_OCInitStructure);
     89             TIM_Cmd(TIM4, ENABLE);
     90          
     91             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     92             TIM_OCInitStructure.TIM_Pulse = 1;
     93             TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
     94             TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     95             TIM_OC4Init(TIM4, &TIM_OCInitStructure);
     96             TIM_Cmd(TIM4, ENABLE);
     97          
     98          
     99          }
    100          
    101          /*******************************************************************************
    102          * Function : RCC_Configuration
    103          *******************************************************************************/
    104          void RCC_Configuration(void)
    105          {
    106             SystemInit();
    107          
    108             /* GPIOx clock enable */
    109             RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD | RCC_APB2Periph_AFIO, ENABLE);
    110          
    111             /* TIM clock enable */
    112             RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
    113          
    114          
    115          }
    116          
    117          /*******************************************************************************
    118          * Function : NVIC_Configuration
    119          *******************************************************************************/
    120          void NVIC_Configuration(void)
    121          {
    122          
    123             //  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
    124          
    125             NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
    126             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    127             NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    128             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    129             NVIC_Init(&NVIC_InitStructure);
    130          
    131          }
    132          
    133          /*******************************************************************************
    134          * Function : GPIO_Configuration
    135          *******************************************************************************/
    136          void GPIO_Configuration(void)
    137          {
    138          
    139             //GPIOA Pin 0: Set The WKUP SW Of Mango B'd
    140             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    141             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    142             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    143             GPIO_Init(GPIOA, &GPIO_InitStructure);
    144          
    145             //GPIOA Pin 1: Set The UserKey SW Of Mango B'd
    146             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
    147             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    148             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    149             GPIO_Init(GPIOA, &GPIO_InitStructure);
    150          
    151             //GPIOB Pin5: Yellow, Pin8: Green, Pin9: Red
    152             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_8 | GPIO_Pin_5;
    153             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    154             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    155             GPIO_Init(GPIOB, &GPIO_InitStructure);
    156          
    157          }
    158          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  GPIO_Configuration
             8 -> GPIO_Init
        8  Initial_Device
             8 -> GPIO_Configuration
             8 -> NVIC_Configuration
             8 -> RCC_Configuration
             8 -> RCC_GetClocksFreq
             8 -> TIMER_Init
        8  NVIC_Configuration
             8 -> NVIC_Init
        8  RCC_Configuration
             8 -> RCC_APB1PeriphClockCmd
             8 -> RCC_APB2PeriphClockCmd
             8 -> SystemInit
        8  TIMER_Init
             8 -> TIM_Cmd
             8 -> TIM_OC1Init
             8 -> TIM_OC2Init
             8 -> TIM_OC3Init
             8 -> TIM_OC4Init
             8 -> TIM_TimeBaseInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      20  ADC_InitStructure
      44  DMA_InitStructure
      84  GPIO_Configuration
       4  GPIO_InitStructure
      16  I2C_InitStructure
      26  Initial_Device
      34  NVIC_Configuration
       4  NVIC_InitStructure
       2  PrescalerValue
      24  RCC_Configuration
     282  TIMER_Init
      16  TIM_OCInitStructure
      12  TIM_TimeBaseStructure
      16  USART_InitStructure
      20  rcc_clocks

 
 154 bytes in section .bss
 494 bytes in section .text
 
 494 bytes of CODE memory
 154 bytes of DATA memory

Errors: none
Warnings: 1
