###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     05/Aug/2022  17:46:09 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c      #
#    Command line =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c -D   #
#                    USE_STDPERIPH_DRIVER -D STM32F10x_HD -D USE_FULL_ASSERT  #
#                    -lcN C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_ #
#                    M32\Debug\List\ -lb C:\Users\TTT\Desktop\zz.STDFW\00.Stu #
#                    dy\project\IAR_M32\Debug\List\ -o                        #
#                    C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\I #
#                    AR_M32\..\..\inc\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\CMSIS\CM3\DeviceSupp #
#                    ort\ST\STM32F10x\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\STM32F10x_StdPeriph_ #
#                    Driver\inc\ -I "C:\Program Files (x86)\IAR               #
#                    Systems\Embedded Workbench 6.0\arm\inc\c\" -On -I        #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\List\Device.lst                                     #
#    Object file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\Device.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c
      1          
      2          #include "Device.h"
      3          #include "Common.h"
      4          
      5          /*******************************************************************************
      6          * TYPE DEFINE STRUCTURE
      7          *******************************************************************************/
      8          USART_InitTypeDef USART_InitStructure;
      9          NVIC_InitTypeDef NVIC_InitStructure;
     10          GPIO_InitTypeDef GPIO_InitStructure;
     11          TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
     12          TIM_OCInitTypeDef TIM_OCInitStructure;
     13          EXTI_InitTypeDef EXTI_InitStructure;
     14          DMA_InitTypeDef DMA_InitStructure;
     15          ADC_InitTypeDef ADC_InitStructure;
     16          RCC_ClocksTypeDef rcc_clocks;
     17          I2C_InitTypeDef	I2C_InitStructure;
     18          
     19          void I2C_Configuration(void);
     20          
     21          uint16_t PrescalerValue = 0;
     22          int counter = 0;
     23          
     24          
     25          /*******************************************************************************
     26          * Divece Initialization
     27          *******************************************************************************/
     28          void Initial_Device(void)
     29          {
     30             RCC_Configuration();
     31             RCC_GetClocksFreq(&rcc_clocks);
     32             GPIO_Configuration();
     33          
     34             TIMER_Init();
     35             NVIC_Configuration();
     36             //EXTI_Configuration();
     37          }
     38          
     39          
     40          /*******************************************************************************
     41          * Function : TIMER_Init
     42          *******************************************************************************/
     43          void TIMER_Init(void)
     44          {
     45             uint16_t	period;
     46             period = (SystemCoreClock / 1200 ) - 1;
     47             //PrescalerValue = (uint16_t) (SystemCoreClock / 120000);
     48          
     49             //TIM4 (CH3): GPIOB 8 LED Green
     50             //TIM4 (CH4): GPIOB 9 LED Red
     51             
     52          
     53             TIM_TimeBaseStructure.TIM_Period = 7200 - 1; // 1sec
     54             TIM_TimeBaseStructure.TIM_Prescaler = 10000 - 1;
     55             TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
     56             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
     57             //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
     58             TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
     59          	TIM_ARRPreloadConfig(TIM4, ENABLE);
     60          	TIM_Cmd(TIM4, ENABLE);	
     61             	//TIM_PrescalerConfig(TIM4, PrescalerValue, TIM_PSCReloadMode_Immediate);
     62          	TIM_ClearFlag(TIM4, TIM_FLAG_Update);
     63          	TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);
     64          	
     65          
     66          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Disable;
     67          //	   TIM_OC1Init(TIM4, &TIM_OCInitStructure);
     68          //	   TIM_OC2Init(TIM4, &TIM_OCInitStructure);
     69          
     70          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     71          //	   TIM_OCInitStructure.TIM_Pulse = 1;
     72          //	   TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
     73          //	   TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     74          //	   TIM_OC3Init(TIM4, &TIM_OCInitStructure);
     75          //	   TIM_Cmd(TIM4, ENABLE);
     76          
     77          //	   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     78          //	   TIM_OCInitStructure.TIM_Pulse = 1;
     79          //	   TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
     80          //	   TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     81          //	   TIM_OC4Init(TIM4, &TIM_OCInitStructure);
     82          //	   TIM_Cmd(TIM4, ENABLE);
     83          
     84          
     85          }
     86          
     87          /*******************************************************************************
     88          * Function : RCC_Configuration
     89          *******************************************************************************/
     90          void RCC_Configuration(void)
     91          {
     92             SystemInit();
     93          
     94             /* GPIOx clock enable */
     95             RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD | RCC_APB2Periph_AFIO, ENABLE);
     96          
     97             /* TIM clock enable */
     98             RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
     99          
    100          
    101          }
    102          
    103          /*******************************************************************************
    104          * Function : NVIC_Configuration
    105          *******************************************************************************/
    106          void NVIC_Configuration(void)
    107          {
    108          
    109             NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
    110             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    111             NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    112             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    113             NVIC_Init(&NVIC_InitStructure);
    114          
    115          //	   NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;
    116          //	   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    117          //	   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    118          //	   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    119          //	   NVIC_Init(&NVIC_InitStructure);
    120          
    121          }
    122          
    123          /*******************************************************************************
    124          * Function : GPIO_Configuration
    125          *******************************************************************************/
    126          void GPIO_Configuration(void)
    127          {
    128          
    129             //GPIOA Pin 0: Set The WKUP SW Of Mango B'd
    130             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    131             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    132             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    133             GPIO_Init(GPIOA, &GPIO_InitStructure);
    134          
    135             //GPIOA Pin 1: Set The UserKey SW Of Mango B'd
    136             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
    137             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    138             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    139             GPIO_Init(GPIOA, &GPIO_InitStructure);
    140          
    141             //GPIOB Pin5: Yellow, Pin8: Green, Pin9: Red
    142             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_8 | GPIO_Pin_5;
    143             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    144             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    145             GPIO_Init(GPIOB, &GPIO_InitStructure);
    146          
    147          	//GPIOC SevenSeg
    148          	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 |
    149          								  GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8;
    150          	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    151          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    152              GPIO_Init(GPIOC, &GPIO_InitStructure);
    153          
    154          }
    155          
    156          void EXTI_Configuration(void){
    157          	EXTI_InitStructure.EXTI_Line = EXTI_Line0;
    158          	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    159          	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    160          	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    161          	EXTI_Init(&EXTI_InitStructure);
    162          
    163          	EXTI_InitStructure.EXTI_Line = EXTI_Line1;
    164              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    165          	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    166          	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    167          	EXTI_Init(&EXTI_InitStructure);
    168          
    169          }
    170          
    171          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  EXTI_Configuration
             8 -> EXTI_Init
        8  GPIO_Configuration
             8 -> GPIO_Init
        8  Initial_Device
             8 -> GPIO_Configuration
             8 -> NVIC_Configuration
             8 -> RCC_Configuration
             8 -> RCC_GetClocksFreq
             8 -> TIMER_Init
        8  NVIC_Configuration
             8 -> NVIC_Init
        8  RCC_Configuration
             8 -> RCC_APB1PeriphClockCmd
             8 -> RCC_APB2PeriphClockCmd
             8 -> SystemInit
        8  TIMER_Init
             8 -> TIM_ARRPreloadConfig
             8 -> TIM_ClearFlag
             8 -> TIM_Cmd
             8 -> TIM_ITConfig
             8 -> TIM_TimeBaseInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      20  ADC_InitStructure
      44  DMA_InitStructure
      64  EXTI_Configuration
       8  EXTI_InitStructure
     112  GPIO_Configuration
       4  GPIO_InitStructure
      16  I2C_InitStructure
      26  Initial_Device
      34  NVIC_Configuration
       4  NVIC_InitStructure
       2  PrescalerValue
      24  RCC_Configuration
      90  TIMER_Init
      16  TIM_OCInitStructure
      12  TIM_TimeBaseStructure
      16  USART_InitStructure
       4  counter
      20  rcc_clocks

 
 166 bytes in section .bss
 390 bytes in section .text
 
 390 bytes of CODE memory
 166 bytes of DATA memory

Errors: none
Warnings: 1
