###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     20/Jul/2022  18:34:50 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c      #
#    Command line =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c -D   #
#                    USE_STDPERIPH_DRIVER -D STM32F10x_HD -D USE_FULL_ASSERT  #
#                    -lcN C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_ #
#                    M32\Debug\List\ -lb C:\Users\TTT\Desktop\zz.STDFW\00.Stu #
#                    dy\project\IAR_M32\Debug\List\ -o                        #
#                    C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\I #
#                    AR_M32\..\..\inc\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\CMSIS\CM3\DeviceSupp #
#                    ort\ST\STM32F10x\ -I C:\Users\TTT\Desktop\zz.STDFW\00.St #
#                    udy\project\IAR_M32\..\..\Libraries\STM32F10x_StdPeriph_ #
#                    Driver\inc\ -I "C:\Program Files (x86)\IAR               #
#                    Systems\Embedded Workbench 6.0\arm\inc\c\" -On -I        #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\List\Device.lst                                     #
#    Object file  =  C:\Users\TTT\Desktop\zz.STDFW\00.Study\project\IAR_M32\D #
#                    ebug\Obj\Device.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\TTT\Desktop\zz.STDFW\00.Study\src\Device.c
      1          
      2          #include "Device.h"
      3          #include "Common.h"
      4          
      5          /*******************************************************************************
      6          * TYPE DEFINE STRUCTURE
      7          *******************************************************************************/
      8          USART_InitTypeDef USART_InitStructure;
      9          NVIC_InitTypeDef NVIC_InitStructure;
     10          GPIO_InitTypeDef GPIO_InitStructure;
     11          TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
     12          TIM_OCInitTypeDef TIM_OCInitStructure;
     13          DMA_InitTypeDef DMA_InitStructure;
     14          ADC_InitTypeDef ADC_InitStructure;
     15          RCC_ClocksTypeDef rcc_clocks;
     16          I2C_InitTypeDef	I2C_InitStructure;
     17          
     18          void I2C_Configuration(void);
     19          
     20          uint16_t PrescalerValue = 0;
     21          
     22          
     23          /*******************************************************************************
     24          * Divece Initialization
     25          *******************************************************************************/
     26          void Initial_Device(void)
     27          {
     28             RCC_Configuration();
     29             RCC_GetClocksFreq(&rcc_clocks);
     30             GPIO_Configuration();
     31          
     32             TIMER_Init();
     33          
     34             if (SysTick_Config(rcc_clocks.SYSCLK_Frequency / 1000))
     35             {
     36                while (1)
     37                   ;
     38             }
     39          
     40             NVIC_Configuration();
     41          }
     42          
     43          
     44          /*******************************************************************************
     45          * Function : TIMER_Init
     46          *******************************************************************************/
     47          void TIMER_Init(void)
     48          {
     49             uint16_t	period;
     50             period = (SystemCoreClock / 1200 ) - 1;
     51             PrescalerValue = (uint16_t) (SystemCoreClock / 120000);
     52          
     53             //TIM4 (CH3): GPIOB 8 LED Green
     54             //TIM4 (CH4): GPIOB 9 LED Red
     55          
     56             TIM_TimeBaseStructure.TIM_Period = 3600 - 1;
     57             TIM_TimeBaseStructure.TIM_Prescaler = 60000 - 1;
     58             TIM_TimeBaseStructure.TIM_ClockDivision = 0;
     59             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
     60             //TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
     61             TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
     62          
     63             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Disable;
     64             TIM_OC1Init(TIM4, &TIM_OCInitStructure);
     65             TIM_OC2Init(TIM4, &TIM_OCInitStructure);
     66          
     67             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     68             TIM_OCInitStructure.TIM_Pulse = 1;
     69             TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
     70             TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     71             TIM_OC3Init(TIM4, &TIM_OCInitStructure);
     72             TIM_Cmd(TIM4, ENABLE);
     73          
     74             TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
     75             TIM_OCInitStructure.TIM_Pulse = 1;
     76             TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
     77             TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Toggle;
     78             TIM_OC4Init(TIM4, &TIM_OCInitStructure);
     79             TIM_Cmd(TIM4, ENABLE);
     80          
     81          
     82          }
     83          
     84          /*******************************************************************************
     85          * Function : RCC_Configuration
     86          *******************************************************************************/
     87          void RCC_Configuration(void)
     88          {
     89             SystemInit();
     90          
     91             /* GPIOx clock enable */
     92             RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD | RCC_APB2Periph_AFIO, ENABLE);
     93          
     94             /* TIM clock enable */
     95             RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
     96          
     97          
     98          }
     99          
    100          /*******************************************************************************
    101          * Function : NVIC_Configuration
    102          *******************************************************************************/
    103          void NVIC_Configuration(void)
    104          {
    105          
    106             //  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
    107          
    108             NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
    109             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    110             NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    111             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    112             NVIC_Init(&NVIC_InitStructure);
    113          
    114          }
    115          
    116          /*******************************************************************************
    117          * Function : GPIO_Configuration
    118          *******************************************************************************/
    119          void GPIO_Configuration(void)
    120          {
    121          
    122             //GPIOA Pin 0: Set The WKUP SW Of Mango B'd
    123             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    124             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    125             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    126             GPIO_Init(GPIOA, &GPIO_InitStructure);
    127          
    128             //GPIOA Pin 1: Set The UserKey SW Of Mango B'd
    129             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
    130             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    131             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    132             GPIO_Init(GPIOA, &GPIO_InitStructure);
    133          
    134             //GPIOB Pin5: Yellow, Pin8: Green, Pin9: Red
    135             GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_8 | GPIO_Pin_5;
    136             GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
    137             GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
    138             GPIO_Init(GPIOB, &GPIO_InitStructure);
    139          
    140          }
    141          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  GPIO_Configuration
             8 -> GPIO_Init
        8  Initial_Device
             8 -> GPIO_Configuration
             8 -> NVIC_Configuration
             8 -> RCC_Configuration
             8 -> RCC_GetClocksFreq
             8 -> SysTick_Config
             8 -> TIMER_Init
        8  NVIC_Configuration
             8 -> NVIC_Init
        0  NVIC_SetPriority
        8  RCC_Configuration
             8 -> RCC_APB1PeriphClockCmd
             8 -> RCC_APB2PeriphClockCmd
             8 -> SystemInit
        8  SysTick_Config
             8 -> NVIC_SetPriority
        8  TIMER_Init
             8 -> TIM_Cmd
             8 -> TIM_OC1Init
             8 -> TIM_OC2Init
             8 -> TIM_OC3Init
             8 -> TIM_OC4Init
             8 -> TIM_TimeBaseInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      20  ADC_InitStructure
      44  DMA_InitStructure
      84  GPIO_Configuration
       4  GPIO_InitStructure
      16  I2C_InitStructure
      48  Initial_Device
      34  NVIC_Configuration
       4  NVIC_InitStructure
      34  NVIC_SetPriority
       2  PrescalerValue
      24  RCC_Configuration
      50  SysTick_Config
     172  TIMER_Init
      16  TIM_OCInitStructure
      12  TIM_TimeBaseStructure
      16  USART_InitStructure
      20  rcc_clocks

 
 154 bytes in section .bss
 510 bytes in section .text
 
 510 bytes of CODE memory
 154 bytes of DATA memory

Errors: none
Warnings: 1
